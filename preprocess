from kafka import KafkaConsumer, KafkaProducer
import json
import numpy as np
import time

# Повторные попытки подключения к Kafka (макс. 10 попыток по 5 сек)
for i in range(10):
    try:
        consumer = KafkaConsumer(
            'raw_data_topic',
            bootstrap_servers='kafka:9092',
            auto_offset_reset='earliest',
            enable_auto_commit=True,
            group_id='preprocess-group',
            value_deserializer=lambda m: json.loads(m.decode('utf-8'))
        )
        producer = KafkaProducer(
            bootstrap_servers='kafka:9092',
            value_serializer=lambda v: json.dumps(v).encode('utf-8')
        )
        print("[+] Успешное подключение к Kafka")
        break
    except Exception as e:
        print(f"[!] Попытка {i+1}: Kafka не готова ({e}), повтор через 5 секунд...")
        time.sleep(5)
else:
    print("[!] Не удалось подключиться к Kafka после 10 попыток. Завершаем.")
    exit(1)

# Простейшая нормализация (z-score)
def preprocess(data):
    try:
        clean_data = {
            k: float(v) if isinstance(v, (int, float)) else 0.0
            for k, v in data.items()
        }
        mean = np.mean(list(clean_data.values()))
        std = np.std(list(clean_data.values()))
        norm_data = {
            k: round((v - mean) / std, 3) if std != 0 else 0.0
            for k, v in clean_data.items()
        }
        return norm_data
    except Exception as e:
        print(f"[!] Ошибка в функции preprocess: {e}")
        return {}

# Основной цикл
print("[*] Preprocess-сервис запущен и ожидает сообщения...")

for msg in consumer:
    try:
        original = msg.value
        payload = original.get("payload", {})
        timestamp = original.get("timestamp", time.time())

        processed = preprocess(payload)

        result = {
            "normalized": processed,
            "ingest_ts": timestamp
        }

        producer.send('preprocessed_data_topic', value=result)
        print(f"[→] Обработано и отправлено: {result}")

    except Exception as e:
        print(f"[!] Ошибка при обработке сообщения: {e}")
